import java.security.MessageDigest;
import java.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

class DecryptMessage {
    public static void main(String[] args) {
        try {
            byte[] decoded = Base64.getDecoder().decode("G38zckAufW4B9A6sywz28kzgW8CCx1UWugLUTjKlo/kwV1CVesmr0tPX/JZOW0aik0TlkrcAIZZ/G0BigUtmeg==".getBytes());
            byte[] key = "<=== P3nt3st3rL4b ===>".getBytes("UTF-8");
            byte[] pin = "1337".getBytes("UTF-8");
            byte[] iv = new byte[16];
            byte[] secret = new byte[16];
            byte[] data = new byte[decoded.length - iv.length];
            IvParameterSpec ivParameterSpec;
            SecretKeySpec secretKeySpec;
            MessageDigest messageDigest = MessageDigest.getInstance("MD5");
            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");

            System.arraycopy(decoded, 0, iv, 0, iv.length);
            System.arraycopy(decoded, 16, data, 0, decoded.length - iv.length);

            ivParameterSpec = new IvParameterSpec(iv);

            for (int i = 0; i < 10000; i++) {
                pin = String.format("%04d", i).getBytes("UTF-8");
                messageDigest = MessageDigest.getInstance("MD5");
                messageDigest.update(key);
                messageDigest.update(pin);
                System.arraycopy(messageDigest.digest(), 0, secret, 0, secret.length);
                secretKeySpec = new SecretKeySpec(secret, "AES");

                try {
                    cipher.init(Cipher.DECRYPT_MODE, secretKeySpec, ivParameterSpec);
                    System.out.println(new String (pin) + ":\t" + new String(cipher.doFinal(data)));
                } catch (Exception e) {}
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
